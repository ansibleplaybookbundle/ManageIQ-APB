apiVersion: v1
kind: DeploymentConfig
metadata:
  generation: 1
  labels:
    app: manageiq-apb
    service: manageiq-postgresql
  name: manageiq-postgresql
spec:
  replicas: 1
  selector:
    app: manageiq-apb
    service: manageiq-postgresql
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: manageiq-apb
        service: manageiq-postgresql
    spec:
      containers:
      - env:
        - name: POSTGRESQL_PASSWORD
          value: '{{ postgresql_password }}'
        - name: POSTGRESQL_USER
          value: '{{ postgresql_user }}'
        - name: POSTGRESQL_DATABASE
          value: '{{ postgresql_database }}'
        image: docker.io/manageiq/manageiq-pods:postgresql-latest
        imagePullPolicy: IfNotPresent
        name: manageiq-postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: manageiq-postgresql
        workingDir: /
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: manageiq-postgresql
        persistentVolumeClaim:
          claimName: manageiq-postgresql
  test: false
  triggers:
  - type: ConfigChange
status: {}

